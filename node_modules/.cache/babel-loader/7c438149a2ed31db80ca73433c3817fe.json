{"ast":null,"code":"var _jsxFileName = \"/Users/jennyhwang/Desktop/useEffect Practice/src/store/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; //React.createContext returns an object that contains a component. \n//So AuthContext is an object that has a component. This is where all states are stored.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false,\n  onLogout: () => {},\n  onLogin: () => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  };\n\n  const loginHandler = () => {\n    localStorage.setItem('isLoggedIn', 1);\n    setIsLoggedIn(true);\n  };\n\n  useEffect(() => {\n    const storedUserLoggedInInfo = localStorage.getItem('isLoggedIn');\n\n    if (storedUserLoggedInInfo === '1') {\n      setIsLoggedIn(true);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      onLogout: logoutHandler,\n      onLogin: loginHandler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthContextProvider, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n\n_c = AuthContextProvider;\nexport default AuthContext; //Wrap the components that need access to this context with this component (AuthContext)\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","useState","useEffect","AuthContext","createContext","isLoggedIn","onLogout","onLogin","AuthContextProvider","props","setIsLoggedIn","logoutHandler","localStorage","removeItem","loginHandler","setItem","storedUserLoggedInInfo","getItem","children"],"sources":["/Users/jennyhwang/Desktop/useEffect Practice/src/store/auth-context.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\n\n\n//React.createContext returns an object that contains a component. \n//So AuthContext is an object that has a component. This is where all states are stored.\nconst AuthContext = React.createContext(\n{\n    isLoggedIn: false,\n    onLogout: () => {},\n    onLogin: () => {}\n}\n\n);\n\nexport const AuthContextProvider = (props) =>\n{\nconst [isLoggedIn, setIsLoggedIn] = useState(false);\n\nconst logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false)\n}\n\nconst loginHandler = () => {\n    localStorage.setItem('isLoggedIn', 1);\n    setIsLoggedIn(true)\n}\n\n\nuseEffect(() => {\n    const storedUserLoggedInInfo = localStorage.getItem('isLoggedIn');\n    if (storedUserLoggedInInfo === '1') {\n      setIsLoggedIn(true);\n    }\n  }, [])\n\n\nreturn (<AuthContext.Provider\nvalue={\n    {\nisLoggedIn: isLoggedIn,\nonLogout: logoutHandler,\nonLogin: loginHandler\n    }\n}\n>\n    {props.children}\n    </AuthContext.Provider>)\n}\n\n\n\nexport default AuthContext \n\n\n\n//Wrap the components that need access to this context with this component (AuthContext)"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC,C,CAGA;AACA;;;AACA,MAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAN,CACpB;EACIC,UAAU,EAAE,KADhB;EAEIC,QAAQ,EAAE,MAAM,CAAE,CAFtB;EAGIC,OAAO,EAAE,MAAM,CAAE;AAHrB,CADoB,CAApB;AASA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IACnC;EAAA;;EACA,MAAM,CAACJ,UAAD,EAAaK,aAAb,IAA8BT,QAAQ,CAAC,KAAD,CAA5C;;EAEA,MAAMU,aAAa,GAAG,MAAM;IACxBC,YAAY,CAACC,UAAb,CAAwB,YAAxB;IACAH,aAAa,CAAC,KAAD,CAAb;EACH,CAHD;;EAKA,MAAMI,YAAY,GAAG,MAAM;IACvBF,YAAY,CAACG,OAAb,CAAqB,YAArB,EAAmC,CAAnC;IACAL,aAAa,CAAC,IAAD,CAAb;EACH,CAHD;;EAMAR,SAAS,CAAC,MAAM;IACZ,MAAMc,sBAAsB,GAAGJ,YAAY,CAACK,OAAb,CAAqB,YAArB,CAA/B;;IACA,IAAID,sBAAsB,KAAK,GAA/B,EAAoC;MAClCN,aAAa,CAAC,IAAD,CAAb;IACD;EACF,CALM,EAKJ,EALI,CAAT;EAQA,oBAAQ,QAAC,WAAD,CAAa,QAAb;IACR,KAAK,EACD;MACJL,UAAU,EAAEA,UADR;MAEJC,QAAQ,EAAEK,aAFN;MAGJJ,OAAO,EAAEO;IAHL,CAFI;IAAA,UASHL,KAAK,CAACS;EATH;IAAA;IAAA;IAAA;EAAA,QAAR;AAWC,CAlCM;;GAAMV,mB;;KAAAA,mB;AAsCb,eAAeL,WAAf,C,CAIA"},"metadata":{},"sourceType":"module"}